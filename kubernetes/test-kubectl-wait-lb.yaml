---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressrouteudps.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: IngressRouteUDP
    plural: ingressrouteudps
    singular: ingressrouteudp
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlsstores.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TLSStore
    plural: tlsstores
    singular: tlsstore
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.containo.us
spec:
  group: traefik.containo.us
  names:
    kind: TraefikService
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced
  version: v1alpha1
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami
  labels:
    app.kubernetes.io/managed-by: ephemeral-namespace-job
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: PathPrefix(`/`)
    services:
    - name: whoami
      port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/managed-by: ephemeral-namespace-job
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-8.10.0
  name: lb-traefik
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/managed-by: ephemeral-namespace-job
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-8.10.0
  name: lb-traefik
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - watch
  - get
  - list
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - traefik.containo.us
  resources:
  - ingressroutes
  - ingressroutetcps
  - ingressrouteudps
  - middlewares
  - tlsoptions
  - tlsstores
  - traefikservices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/managed-by: ephemeral-namespace-job
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-8.10.0
  name: lb-traefik
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lb-traefik
subjects:
- kind: ServiceAccount
  name: lb-traefik
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: whoami
    app.kubernetes.io/managed-by: ephemeral-namespace-job
  name: whoami
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: whoami
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: whoami
spec:
  selector:
    matchLabels:
      app: whoami
  replicas: 10 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: whoami
    spec:
      initContainers:
      - name: sleeppy
        image: ubuntu:latest
        command:
        - /bin/bash
        - -c
        - |
          set -x
          sleep "$(( $RANDOM % 60 + 1 ))"
      containers:
      - name: whoami
        image: containous/whoami
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          failureThreshold: 10
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/managed-by: ephemeral-namespace-job
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-8.10.0
  name: lb-traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: lb
      app.kubernetes.io/name: traefik
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        config.linkerd.io/skip-inbound-ports: 8000,8443
      labels:
        app.kubernetes.io/instance: lb
        app.kubernetes.io/managed-by: ephemeral-namespace-job
        app.kubernetes.io/name: traefik
        helm.sh/chart: traefik-8.10.0
    spec:
      initContainers:
      - name: waiter
        image: bitnami/kubectl:1.17.3
        command:
        - bash
        - -c
        - |
          set -xeufo pipefail
          while true
          do
            kubectl wait --for=condition=available deployment/whoami || {
              sleep 1
              continue
            }
            break
          done
      containers:
      - args:
        - --global.checknewversion
        - --global.sendanonymoususage
        - --entryPoints.traefik.address=:9000/tcp
        - --entryPoints.web.address=:8000/tcp
        - --entryPoints.websecure.address=:8443/tcp
        - --api.dashboard=true
        - --api.insecure=true
        - --ping=true
        - --log
        - --log.level=DEBUG
        - --providers.kubernetescrd
        - --providers.kubernetescrd.namespaces=default
        - --providers.kubernetesingress.namespaces=default
        image: traefik:2.2.8
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: lb-traefik
        ports:
        - containerPort: 9000
          name: traefik
          protocol: TCP
        - containerPort: 8000
          name: web
          protocol: TCP
        - containerPort: 8443
          name: websecure
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ping
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources: null
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /tmp
          name: tmp
      hostNetwork: false
      securityContext:
        fsGroup: 65532
      serviceAccountName: lb-traefik
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: data
      - emptyDir: {}
        name: tmp
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/managed-by: ephemeral-namespace-job
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-8.10.0
  name: lb-traefik
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: web
  - name: websecure
    port: 443
    protocol: TCP
    targetPort: websecure
  selector:
    app.kubernetes.io/instance: lb
    app.kubernetes.io/name: traefik
  type: ClusterIP
---
